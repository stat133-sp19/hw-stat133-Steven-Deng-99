age_colors[age_colors = "20-24"] = "#D4D62A"
age_colors["20-24"]
boxplot(salary2 ~ position, data = nba,
xlab = "Position", ylab = "Salary2 (in millions)")
nba$salary2
boxplot(points ~ position, data = nba,
xlab = "Position", ylab = "Salary2 (in millions)")
age2
age2[1]
age2[1] == "30+"
expr <- as.character(age2)
age_colors <- as.character(age2)
age_colors[age_colors = "20-24"] = "#D4D62A"
palette1 <- c("#D4D62A", "#4F9D66", "#9575AB")
age_colors <- as.character(age2)
age_colors[age_colors = "20-24"] = "#D4D62A"
age_colors[age_colors = "25-29"] = "#4F9D66"
age_colors[age_colors = "30+"] = "#9575AB"
plot(salary ~ points, data = nba, log = "xy",  main = "", xlab = "Points (log scale)", ylab = "Salary (log $)", col = age_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette1, legend = levels(age2), title = "Age Groups", cex = 0.8)
palette1 <- c("#D4D62A", "#4F9D66", "#9575AB")
age_colors <- as.character(age2)
age_colors[age_colors = "20-24"] = "#D4D62A"
age_colors[age_colors = "25-29"] = "#4F9D66"
age_colors[age_colors = "30+"] = "#9575AB"
age_colors
palette1 <- c("#D4D62A", "#4F9D66", "#9575AB")
age_colors <- as.character(age2)
age_colors
age_colors[age_colors == "20-24"] = "#D4D62A"
age_colors[age_colors == "25-29"] = "#4F9D66"
age_colors[age_colors == "30+"] = "#9575AB"
age_colors
palette1 <- c("#D4D62A", "#4F9D66", "#9575AB")
age_colors <- as.character(age2)
age_colors[age_colors == "20-24"] = "#D4D62A"
age_colors[age_colors == "25-29"] = "#4F9D66"
age_colors[age_colors == "30+"] = "#9575AB"
plot(salary ~ points, data = nba, log = "xy",  main = "", xlab = "Points (log scale)", ylab = "Salary (log $)", col = age_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette1, legend = levels(age2), title = "Age Groups", cex = 0.8)
str(nba$position)
nba$position
boxplot(salary2 ~ position, data = nba,
xlab = "Position", ylab = "Salary2 (in millions)")
boxplot(points ~ position, data = nba,
xlab = "Position", ylab = "Salary2 (in millions)")
paltette2 <- c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854")
position_colors <- as.character(nba$position)
position_colors[position_colors == "C"] = "#66c2a5"
position_colors[position_colors == "PF"] = "#fc8d62"
position_colors[position_colors == "PG"] = "#8da0cb"
position_colors[position_colors == "SF"] = "#e78ac3"
position_colors[position_colors == "SG"] = "#a6d854"
plot(salary ~ points, data = nba, log = "xy",  main = "", xlab = "Points (log scale)", ylab = "Salary (log $)", col = position_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette2, legend = levels(nba$position), title = "Position Groups", cex = 0.8)
boxplot(salary2 ~ position, data = nba,
xlab = "Position", ylab = "Salary2 (in millions)")
boxplot(points ~ position, data = nba,
xlab = "Position", ylab = "Salary2 (in millions)")
palette2 <- c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854")
position_colors <- as.character(nba$position)
position_colors[position_colors == "C"] = "#66c2a5"
position_colors[position_colors == "PF"] = "#fc8d62"
position_colors[position_colors == "PG"] = "#8da0cb"
position_colors[position_colors == "SF"] = "#e78ac3"
position_colors[position_colors == "SG"] = "#a6d854"
plot(salary ~ points, data = nba, log = "xy",  main = "", xlab = "Points (log scale)", ylab = "Salary (log $)", col = position_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette2, legend = levels(nba$position), title = "Position Groups", cex = 0.8)
boxplot(salary2 ~ position, data = nba,
xlab = "Position", ylab = "Salary2 (in millions)")
boxplot(points ~ position, data = nba,
xlab = "Position", ylab = "Salary2 (in millions)")
palette2 <- c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854")
position_colors <- as.character(nba$position)
position_colors[position_colors == "C"] = "#66c2a5"
position_colors[position_colors == "PF"] = "#fc8d62"
position_colors[position_colors == "PG"] = "#8da0cb"
position_colors[position_colors == "SF"] = "#e78ac3"
position_colors[position_colors == "SG"] = "#a6d854"
plot(log_salary2 ~ log_points, data = nba, log = "xy",  main = "", xlab = "Points (log scale)", ylab = "Salary (log $)", col = position_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette2, legend = levels(nba$position), title = "Position Groups", cex = 0.8)
nba$log_points
log_salary2
nba$log_salary2
boxplot(salary2 ~ position, data = nba,
xlab = "Position", ylab = "Salary2 (in millions)")
boxplot(points ~ position, data = nba,
xlab = "Position", ylab = "Salary2 (in millions)")
palette2 <- c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854")
position_colors <- as.character(nba$position)
position_colors[position_colors == "C"] = "#66c2a5"
position_colors[position_colors == "PF"] = "#fc8d62"
position_colors[position_colors == "PG"] = "#8da0cb"
position_colors[position_colors == "SF"] = "#e78ac3"
position_colors[position_colors == "SG"] = "#a6d854"
plot(salary ~ points, data = nba, log = "xy",  main = "", xlab = "Points (log scale)", ylab = "Salary (log $)", col = position_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette2, legend = levels(nba$position), title = "Position Groups", cex = 0.8)
install.packages(c("dplyr", "ggplot2"))
library(dplyr)
library(ggplot2)
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
dat <- read_csv('nba2018-players.csv')
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
dat <- read_csv('nba2018-players.csv')
dat <- read.csv('https://github.com/ucb-stat133/stat133-labs/blob/master/data/nba2018-players.csv', stringsAsFactors = FALSE)
dat <- read_csv('https://github.com/ucb-stat133/stat133-labs/blob/master/data/nba2018-players.csv')
install.packages('readr')
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv('https://github.com/ucb-stat133/stat133-labs/blob/master/data/nba2018-players.csv', sep = ',',  stringsAsFactors = FALSE)
three_rows <- slice(dat, 1:3)
slice(dat, seq(10, 50, 5))
?seq
seq(1, 9, by = 2)
dat <- read.csv('https://github.com/ucb-stat133/stat133-labs/blob/master/data/nba2018-players.csv',  stringsAsFactors = FALSE)
slice(dat, 1:5)
View(dat)
dat <- read_csv('https://github.com/ucb-stat133/stat133-labs/blob/master/data/nba2018-players.csv',  stringsAsFactors = FALSE)
dat <- read_csv('https://github.com/ucb-stat133/stat133-labs/blob/master/data/nba2018-players.csv')
install.packages("readr")
library(readr)
dat <- read_csv('https://github.com/ucb-stat133/stat133-labs/blob/master/data/nba2018-players.csv')
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
dat <- read_csv('nba2018-players.csv')
three_rows <- slice(dat, 1:3)
three_rows
gt_85 <- filter(dat, height > 85)
gt_85
player_height <- select(dat, player, height)
slice(dat, 1:5)
slice(dat, seq(10, 50, 5))
dat <- read_csv('nba2018-players.csv')
dat <- read_csv('nba2018-players.csv')
three_rows <- slice(dat, 1:3)
three_rows
gt_85 <- filter(dat, height > 85)
gt_85
player_height <- select(dat, player, height)
slice(dat, 1:5)
slice(dat, seq(10, 50, 5))
seq(10, 50, 5)
seq(length(dat)-5, length(dat), 1)
seq(length(dat)-4, length(dat), 1)
filter(dat, dat$team == 'GSW' && dat$position == 'C')
filter(dat, dat$position == 'C')
a = filter(dat, dat$position == 'C')
filter(a, a$position == 'C')
filter(a, a$team == 'C')
LAL <- filter(dat, dat$team == 'LAL')
LAL
select(LAL, LAL$player)
select(LAL, 1)
imp = filter(dat, dat$team == 'GSW' && dat$position == 'PG)
a
''
'
imp = filter(dat, dat$team == 'GSW' && dat$position == 'PG')
imp
dat
filter(dat, team == 'GSW' , position == 'PG')
filter(dat, dat$team == 'GSW' & dat$position == 'C')
select(imp, imp$player, imp$salary)
imp = filter(dat, team == 'GSW' , position == 'PG')
select(imp, imp$player, imp$salary)
select(imp, 1, 9)
imp = filter(dat, dat$age == 20)
imp = select(imp, 1, 2, 4, 5)
slice(imp, 1:5)
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
mutate(gsw, height / weight)
mutate(gsw, ht_wt = height / weight)
gsw2 <- mutate(gsw, ht_m = height * 0.0254, wt_kg = weight * 0.4536)
gsw2
arrange(gsw, height)
arrange(gsw, desc(height))
arrange(gsw, height, weight)
gsw <- mutate(gsw, product = height * weight)
gsw
arrage(filter(dat, height < 71), height)
arrange(filter(dat, height < 71), height)
select(arrage(dat, desc(salary)), 1, 2, 9)
select(arrange(dat, desc(salary)), 1, 2, 9)
mutate(gsw, mpg = minutes / games)
gsw
mutate(filter(dat, team == 'GSW'), mpg = minutes / games)
select(mutate(filter(dat, team == 'GSW'), mpg = minutes / games), 1, 7, 16)
arrange(select(mutate(filter(dat, team == 'GSW'), mpg = minutes / games), 1, 7, 16), desc(mpg))
```{r scatterplot height against weight}
ggplot(data = dat, ase(x = height, y = weight)) +
geom_point()
```
```{r scatterplot height against weight}
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point()
```
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point()
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point()
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point() + geom_text(data = dat, aes(player)
)
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point() + geom_text(data = dat, aes(label = player))
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point() + geom_text(data = dat, aes(label = player), check_overlap = TRUE)
filter(dat, team == 'W')
ggplot(data = filter(dat, dat$team = "GSW"), aes(x = height, y = weight)) +
geom_point() + geom_label(aes(label = player))
ggplot(data = filter(dat, dat$team = "GSW"), aes(x = height, y = weight)) +
geom_point() + geom_label(data = dat, aes(label = player))
ggplot(data = filter(dat, dat$team = "GSW"), aes(x = height, y = weight)) + geom_label(filter(dat, dat$team = "GSW"), aes(x = height, y = weight, label = player))
ggplot(data = filter(dat, dat$team == "GSW"), aes(x = height, y = weight)) + geom_label(filter(dat, dat$team == "GSW"), aes(x = height, y = weight, label = player))
ggplot(data = filter(dat, dat$team == "GSW"), aes(x = height, y = weight)) + geom_label(filter(dat, dat$team == "GSW"), aes(label = player))
ggplot(data = filter(dat, dat$team == "GSW"), aes(x = height, y = weight)) + geom_label(data = filter(dat, dat$team == "GSW"), aes(label = player))
ggplot(data = filter(dat, dat$team == "GSW"), aes(x = height, y = weight)) + geom_point() + geom_label(data = filter(dat, dat$team == "GSW"), aes(label = player))
ggplot(data = filter(dat, dat$team == "GSW"), aes(x = height, y = weight)) + geom_point() + geom_label(data = filter(dat, dat$team == "GSW"), aes(label = player), check_overlap = TRUE)
ggplot(data = filter(dat, dat$team == "GSW"), aes(x = height, y = weight)) + geom_point() + geom_label(aes(label = player))
ggplot(data = dat, aes(salary)) + geom_density(kernel = 'gaussian')
ggplot(data = dat, aes(points2)) + geom_density(binwidth = 50)
ggplot(data = dat, aes(points2)) + geom_density(50)
ggplot(data = dat, aes(points2)) + geom_density(aes(binwidth = 50))
ggplot(data = dat, aes(points2)) + geom_histogram(binwidth = 50)
ggplot(data = dat, aes(position)) + geom_bar()
ggplot(dat = filter(dat, position = 'C'), aes(x = experience, y = salary)) + geom_smooth(method = lm)
ggplot(dat = filter(dat, position == 'C'), aes(x = experience, y = salary)) + geom_smooth(method = lm)
ggplot(dat = filter(dat, position == 'C'), aes(x = experience, y = salary)) + geom_point() + geom_smooth(method = lm)
ggplot(dat = filter(dat, position == 'C'), aes(x = experience, y = salary)) + geom_point() + geom_smooth(method = loess)
github <- 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
datafile
?read.csv
dat <- read.csv(datafile)
dat
dat <- read.csv(datafile, header = header)
dat <- read.csv(datafile, data_type)
dat <- read.csv(file = datafile, header = data_type)
dat <- read.csv(file = datafile, colClasses = data_type)
data_type <- c(rep("Charater", 3), "factor", rep("integer", 10), "real")
dat <- read.csv(file = datafile, colClasses = data_type)
dat
data_type <- c(rep("Charater", 2), "factor", rep("integer", 4), "character", "real", rep("integer", 6))
dat <- read.csv(file = datafile, colClasses = data_type)
data_type <- c(rep("charater", 2), "factor", rep("integer", 4), "character", "real", rep("integer", 6))
dat <- read.csv(file = datafile, colClasses = data_type)
data_type <- c(rep("character", 2), "factor", rep("integer", 4), "character", "real", rep("integer", 6))
dat <- read.csv(file = datafile, colClasses = data_type)
dat
summary(dat)
class(dat)
dat
dat <- read_csv(file = datafile, colClasses = data_type)
library(dplyr)
library(ggplot2)
library(readr)
?read_csv
dat <- read_csv(file = datafile, col_types = data_type)
data_type <- c(rep(col_character(), 2), col_factor(), rep(col_integer(), 4), col_character(), col_double(), rep(col_integer()), 6))
data_type <- c(rep(col_character(), 2), col_factor(), rep(col_integer(), 4), col_character(), col_double(), rep(col_integer()), 6)
dat <- read_csv(file = datafile, col_types = data_type)
data_type <- list(rep(col_character(), 2), col_factor(), rep(col_integer(), 4), col_character(), col_double(), rep(col_integer()), 6)
dat <- read_csv(file = datafile, col_types = data_type)
data_type <- list(rep(col_character(), 2), col_factor(), rep(col_integer(), 4), col_character(), col_double(), rep(col_integer(), 6))
dat <- read_csv(file = datafile, col_types = data_type)
rep(col_character(), 2)
class(rep(col_character(), 2))
dat <- read_csv(file = datafile, col_types = 'dc')
github <- 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
dat <- read_csv(file = datafile, col_types = 'dc')
data_type <- list(
player = col_character(),
team = col_character(),
position = col_factor(),
height = col_integer(),
weight = col_integer(),
age = col_integer(),
experience = col_integer(),
college = col_character(),
salary = col_double(),
games = col_integer(),
minutes = col_integer(),
points = col_integer(),
points3 = col_integer(),
points2 = col_integer(),
points1 = col_integer()
)
dat <- read_csv(file = datafile, col_types = data_type)
summary(dat)
class(dat)
dat
?read_csv
temp_type <- cols_only(
player = col_character(),
team = col_character(),
salary = col_double(),
points = col_integer()
)
read_csv(file = datafile, col_types = temp_type)
dat
?read_csv
read.csv()
?read.csv
?read_csv
dat
group_by(dat, team)
team_salary <- select(dat, team, salary)
team_salary
group_by(dat, team)
dat %>% group_by(team) %>% summarise(mean_salary = mean(salary / (10e+06)))
dat %>% group_by(team) %>% summarise(total_salary = sum(salary), mean_salary = mean(salary), median_salary = median(salary)) %>% arrange(total_salary, desc = TRUE)
dat %>% group_by(team) %>% summarise(total_salary = sum(salary), mean_salary = mean(salary), median_salary = median(salary))
dat %>% group_by(team) %>% summarise(total_salary = sum(salary / 10e+06), mean_salary = mean(salary / 10e+06), median_salary = median(salary / 10e+06)) %>% arrange(desc(total_salary))
ggplot2(team_salaries, aes(x = recorder(team, Num), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip
ggplot(team_salaries, aes(x = recorder(team, Num), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip
team_salaries <- dat %>% group_by(team) %>% summarise(total_salary = sum(salary / 10e+06), mean_salary = mean(salary / 10e+06), median_salary = median(salary / 10e+06)) %>% arrange(desc(total_salary))
as.data.frame(team_salaries)
ggplot(team_salaries, aes(x = recorder(team, Num), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip
ggplot(team_salaries, aes(x = recorder(team, Num), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip()
ggplot(team_salaries, aes(x = reorder(team, Num), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip()
ggplot(team_salaries, aes(x = team, y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip()
team_salaries <- dat %>% group_by(team) %>% summarise(total_salary = sum(salary / 10e+06), mean_salary = mean(salary / 10e+06), median_salary = median(salary / 10e+06)) %>% arrange(desc(total_salary))
team_salaries
ggplot(team_salaries, aes(x = reorder(team), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip()
ggplot(team_salaries, aes(x = total_salary, y = team)) +
geom_bar(stat = 'identity')
ggplot(team_salaries, aes(x = team, y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip()
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip()
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + lab(x = "Total Salary (in millions)") + lab(y = "team")
+labs(title = "NBA Teams Ranked by Total Salary")
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Total Salary (in millions)") + labs(y = "team")
+labs(title = "NBA Teams Ranked by Total Salary")
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "Total Salary (in millions)")
+labs(title = "NBA Teams Ranked by Total Salary")
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "Total Salary (in millions)")
+ title("NBA Teams by Total Salary")
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "Total Salary (in millions)")
+ labs(title = "NBA Teams by Total Salary")
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "Total Salary (in millions)")
+ labs(title = "title", tag = "A")
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "Total Salary (in millions)")
+ geom_vline(yintercept = mean(total_points), col = 'red')
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "Total Salary (in millions)")
+ geom_vline(yintercept = mean(team_salary$total_points), col = 'red')
mean(team_salary$total_points)
team_salary
team_salaries <- dat %>% group_by(team) %>% summarise(total_salary = sum(salary / 10e+06), mean_salary = mean(salary / 10e+06), median_salary = median(salary / 10e+06)) %>% arrange(desc(total_salary))
team_salaries
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "Total Salary (in millions)")
+ geom_vline(yintercept = mean(team_salary$total_points), col = 'red')
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "Total Salary (in millions)")
+ geom_vline(yintercept = mean(total_salary), col = 'red')
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "T
)
)
asdasd0))
"
)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "Total Salary (in millions)")
+ geom_vline(yintercept = mean(team_salaries$total_salary), col = 'red')
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "Total Salary (in millions)") +     geom_vline(yintercept = mean(team_salaries$total_salary), col = 'red')
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "Total Salary (in millions)") +     geom_hline(yintercept = mean(team_salaries$total_salary), col = 'red')
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "Total Salary (in millions)") +
+ labs(title = "A") + geom_hline(yintercept = mean(team_salaries$total_salary), col = 'red')
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "Total Salary (in millions)") +
labs(title = "A") + geom_hline(yintercept = mean(team_salaries$total_salary), col = 'red')
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "Total Salary (in millions)") +
labs(title = "NBA Teams Ranked by Total Salary") + geom_hline(yintercept = mean(team_salaries$total_salary), col = 'red')
team_points <- dat %>% group_by(team) %>% summarise(total_points = sum(points), mean_salary = mean(points), median_salary = median(points) %>% arrange(desc(total_points))
)
team_points <- dat %>% group_by(team) %>% summarise(total_points = sum(points), mean_salary = mean(points), median_salary = median(points)) %>% arrange(desc(total_points))
team_points
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "Total Scored Points") +
labs(title = "NBA Teams Ranked by Total Scored Points") + geom_hline(yintercept = mean(team_salaries$total_points), col = 'red')
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) +
geom_bar(stat = 'identity') + coord_flip() + labs(x = "Team") + labs(y = "Total Scored Points") +
labs(title = "NBA Teams Ranked by Total Scored Points") + geom_hline(yintercept = mean(team_points$total_points), col = 'red')
inner_join(team_points, team_salaries)
inner_join(team_points, team_salaries, by = "team")
left_join(team_points, team_salaries, by = "team")
summary(points_salaries)
points_salaries <- inner_join(team_points, team_salaries, by = "team")
summary(points_salaries)
points_salaries <- mutate(points_salaries, cost_point = total_salary / total_points)
points_salaries <- mutate(points_salaries, cost_point = total_salary * 1.0e+06 / total_points)
summary(points_salaries$cost_point)
points_salaries
class(dat)
```{r}
github <- 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
data_types = c("character", "factor", "factor", "integer", "integer", "integer", "integer", "character", "real", "integer", "integer", "integer", "integer", "integer", "integer")
nba <- read.csv(file = datafile, sep = ",", colClasses = data_types)
str(nba, vec.len = 1)
nba2 <- read.table(file = datafile, sep = ",", colClasses = data_types, skip = 1)
str(nba2, vec.len = 1)
identical(nba, nba2)
```
github <- 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
data_type <- list(
player = col_character(),
team = col_character(),
position = col_factor(),
height = col_integer(),
weight = col_integer(),
age = col_integer(),
experience = col_integer(),
college = col_character(),
salary = col_double(),
games = col_integer(),
minutes = col_integer(),
points = col_integer(),
points3 = col_integer(),
points2 = col_integer(),
points1 = col_integer()
)
dat <- read_csv(file = datafile, col_types = data_type)
summary(dat)
class(dat)
as.data.frame(team_salaries)
head(mtcars)
getwd()
write(x = mtcars, )
write(x = mtcars, file = 'stat133-lab05/exports.csv')
write.csvx = mtcars, file = 'stat133-lab05/exports.csv'()
write.csv(x = mtcars, file = 'stat133-lab05/exports.csv')
sink(file = 'stat133-lab05/summary-mpg-disp.txt')
summary(mtcars[ ,c('mpg', 'disp')])
sink()
dat <- data_frame(mpg, disp, hp);
dat <- data_frame(mtcars$mpg, mtcars$disp, mtcars$hp);
dat
dat <- data.frame(mtcars$mpg, mtcars$disp, mtcars$hp);
dat
?png
?pdf
x <- c(1,2,3,4)
names(x) <- letters[1:4]
x
x[repeat('a', 5)]
x[rep('a', 5)]
as.logical(c(0,1,-pi,10))
curry <- read.csv("../data/stephen-curry.csv", stringsAsFactors = FALSE)
curry <- read.csv("../data/stephen-curry.csv", stringsAsFactors = FALSE)
pwd
curry <- read.csv("../data/stephen-curr.csv", stringsAsFactors = FALSE)
curry <- read.csv("../data/stephen-curry.csv", stringsAsFactors = FALSE)
curry <- read.csv("../data/stephencurry.csv", stringsAsFactors = FALSE)
curry <- read.csv("../data/stephen-curry.csv", stringsAsFactors = FALSE)
knitr::opts_chunk$set(echo = TRUE)
curry <- read.csv("../data/stephen-curry.csv", stringsAsFactors = FALSE)
plot(pressure)
curry
curry <- read.csv("../data/stephen-curry.csv", stringsAsFactors = FALSE)
View(curry)
curry$name <- c("Curry")
curry
thompson
durant
curry
thompson$name <- c("Klay Thompson")
iguodala
curry
iguodala
iguodala
curry
source('~/Desktop/Jounary In Cal/Stat 133/Workout/workout01/code/make-shots-data-script.R')
View(curry)
View(curry)
thompson$name <- c("Klay Thompson")
getwd
getwd()
setwd("/Users/stevendeng/Desktop/Jounary\ In\ Cal/Stat\ 133/Workout/workout01")
durant <- read.csv("../data/kelvin-durant.csv", stringsAsFactors = FALSE)
setwd("/Users/stevendeng/Desktop/Jounary\ In\ Cal/Stat\ 133/Workout/workout01/data")
curry
setwd("/Users/stevendeng/Desktop/Jounary\ In\ Cal/Stat\ 133/Workout/workout01/code")
curry
thompson$name <- c("Klay Thompson")
